group 'net.corda.spikes.di-container-spike'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        java_version = '1.8'
        kotlin_version = '1.2.51'
        junit_version = '5.2.0'
        junit_gradle_plugin_version = '1.2.0'

        javax_cdi_version = '2.0'
        javax_annotation_api_version = '1.0.0.Final'

        konfig_version = '1.6.10.0'
        reactor_version = '3.1.8.RELEASE'

        weld_version = '3.0.5.Final'
        jandex_version = '2.0.5.Final'
        slf4j_version = '1.7.25'
        log4j_version = '2.11.1'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

apply plugin: 'base'

subprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    apply plugin: 'kotlin'
    apply plugin: 'kotlin-allopen'

    allOpen {
        annotations(
            "javax.enterprise.context.ApplicationScoped"
        )
    }

    sourceCompatibility = java_version

    dependencies {
        compileOnly "javax.enterprise:cdi-api:$javax_cdi_version"

        testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
            javaParameters = true
            freeCompilerArgs = ['-Xjvm-default=enable']
        }
    }

    // We would normally handle META-INF/beans.xml as a resource.
    // But we need to copy it into the classes directory so that
    // we can also run the application within IntelliJ.
    task copyWeld(type: Copy) {
        from 'src/main/weld'
        into compileKotlin.destinationDir
    }
    compileKotlin.finalizedBy copyWeld

    tasks.withType(AbstractArchiveTask).all {
        reproducibleFileOrder = true
    }
}

ext {
    nodeCordappsDirectory = file("$rootDir/node/cordapps")
    nodePluginsDirectory = file("$rootDir/node/plugins")
}

clean {
    doFirst {
        nodePluginsDirectory.deleteDir()
        nodeCordappsDirectory.deleteDir()
    }
    doLast {
        nodePluginsDirectory.mkdirs()
        nodeCordappsDirectory.mkdirs()
    }
}